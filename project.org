* References
** These issues from gitlab are directly relevant
   if you even need a refresher read them through

   1. https://gitlab.haskell.org/ghc/ghc/-/issues/18541
   2. https://gitlab.haskell.org/ghc/ghc/-/issues/18535
   3. [[https://gitlab.haskell.org/bgamari/bottom-up-analysis/-/tree/master][Ben Gamari's allocation center benchmarking script]]

** Downloading Hackage
   [[http://neilmitchell.blogspot.com/2018/11/downloading-all-of-hackage.html][neil mitchell's blog post on doing this will work]]

* Input

** A Hackage project

* Output

** Build times by compiler phase

** Allocations/Entries of particular functions

** Should be a csv for R

* Want

** DONE Automatic pull of packages from hackage
   CLOSED: [2021-06-20 Sun 21:51]

   - Note taken on [2021-06-20 Sun 21:51] \\
     implemented with caching and calls to ~wget~

** Automatic diagnostics

*** By commits to GHC HEAD

*** or by GHC release

* Project Todos

** DONE Initial setup
   CLOSED: [2021-05-30 Sun 17:31]

** DONE Nixify
   CLOSED: [2021-06-20 Sun 21:49]

** DONE Read in hackage package
   CLOSED: [2021-06-22 Tue 19:40]

** DONE Call compiler packages on package

** DONE Project produces useful output data

** DONE Project produces alloc/entries output data

** DONE Project runs autonomously
